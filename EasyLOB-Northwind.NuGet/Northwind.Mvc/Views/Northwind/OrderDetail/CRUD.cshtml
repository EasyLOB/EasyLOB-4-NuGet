@model OrderDetailItemModel

@{
    string CSHTML = "OrderDetail - CRUD.cshtml";

    string controllerAction = Model.ControllerAction.ToLower();
    string controllerActionResource = PresentationResources.ResourceManager.GetString(Model.ControllerAction);

    string documentTitle, pageTitle;
    AppHelper.Title(out documentTitle, out pageTitle,
        OrderDetailResources.EntitySingular, OrderDetailResources.EntityPlural,
        controllerAction, controllerActionResource,
        Model.IsMasterDetail);
}

@using (Ajax.BeginForm(Model.ControllerAction, "OrderDetail", AppHelper.AjaxOptions, new { id = "Form_OrderDetail", style = "display: none;" }))
{
    @Html.AntiForgeryToken()

    <h4>@pageTitle</h4>

    <div class="@AppDefaults.CSSClassForm">
        @{ Html.RenderPartial("_OrderDetailItem", Model); }
    </div>

    <div class="@AppDefaults.CSSClassFormButtons">
        @Ajax.ZImageLink("Button_Cancel", Url.Action("Search", "OrderDetail"), "ZAjax", "btn z-buttonCancel", PresentationResources.Cancel)
        @Html.ZImageInput("Button_Save", "btn z-buttonSave", PresentationResources.Save, "$('#OrderDetail_Item_IsSave').val('True');")
        @Html.ZImageInput("Button_OK", "btn z-buttonOk", controllerActionResource)        
    </div> 
}

<script>
    $(function () {
        try {
            var model = @Html.Raw(JsonConvert.SerializeObject(Model));

            var url = zUrlDictionaryRead("OrderDetail");
            if (url) {
                $("#Button_Cancel").attr("href", url);
            }            

            $(document).prop("title", "@Html.Raw(documentTitle)");
            
            zOnCRUDView(model);
        } catch (exception) {
            zAlert(zExceptionMessage("@CSHTML", "function", exception.message));
        }
    });
</script>